{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {};\nexports.default = void 0;\n\nvar matrixcs = _interopRequireWildcard(require(\"./matrix\"));\n\nObject.keys(matrixcs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return matrixcs[key];\n    }\n  });\n});\n\nvar _browserRequest = _interopRequireDefault(require(\"browser-request\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n/*\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n\nmatrixcs.request(function (opts, fn) {\n  // We manually fix the query string for browser-request because\n  // it doesn't correctly handle cases like ?via=one&via=two. Instead\n  // we mimic `request`'s query string interface to make it all work\n  // as expected.\n  // browser-request will happily take the constructed string as the\n  // query string without trying to modify it further.\n  opts.qs = _qs.default.stringify(opts.qs || {}, opts.qsStringifyOptions);\n  return (0, _browserRequest.default)(opts, fn);\n}); // just *accessing* indexedDB throws an exception in firefox with\n// indexeddb disabled.\n\nlet indexedDB;\n\ntry {\n  indexedDB = global.indexedDB;\n} catch (e) {} // if our browser (appears to) support indexeddb, use an indexeddb crypto store.\n\n\nif (indexedDB) {\n  matrixcs.setCryptoStoreFactory(function () {\n    return new matrixcs.IndexedDBCryptoStore(indexedDB, \"matrix-js-sdk:crypto\");\n  });\n} // We export 3 things to make browserify happy as well as downstream projects.\n// It's awkward, but required.\n\n\nvar _default = matrixcs; // keep export for browserify package deps\n\nexports.default = _default;\nglobal.matrixcs = matrixcs;","map":{"version":3,"sources":["/home/kimist/Developpement/React/watcha_client/node_modules/matrix-js-sdk/lib/browser-index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","_exportNames","default","matrixcs","keys","forEach","key","prototype","hasOwnProperty","call","enumerable","get","_browserRequest","_qs","request","opts","fn","qs","stringify","qsStringifyOptions","indexedDB","global","e","setCryptoStoreFactory","IndexedDBCryptoStore","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA,IAAIC,YAAY,GAAG,EAAnB;AACAF,OAAO,CAACG,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGP,uBAAuB,CAACD,OAAO,CAAC,UAAD,CAAR,CAAtC;;AAEAE,MAAM,CAACO,IAAP,CAAYD,QAAZ,EAAsBE,OAAtB,CAA8B,UAAUC,GAAV,EAAe;AAC3C,MAAIA,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,YAAjC,EAA+C;AAC/C,MAAIT,MAAM,CAACU,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,YAArC,EAAmDK,GAAnD,CAAJ,EAA6D;AAC7DT,EAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+BO,GAA/B,EAAoC;AAClCI,IAAAA,UAAU,EAAE,IADsB;AAElCC,IAAAA,GAAG,EAAE,YAAY;AACf,aAAOR,QAAQ,CAACG,GAAD,CAAf;AACD;AAJiC,GAApC;AAMD,CATD;;AAWA,IAAIM,eAAe,GAAGlB,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAA5C;;AAEA,IAAIkB,GAAG,GAAGnB,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAhC;AAEA;;;;;;;;;;;;;;;;;AAeAQ,QAAQ,CAACW,OAAT,CAAiB,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACAD,EAAAA,IAAI,CAACE,EAAL,GAAUJ,GAAG,CAACX,OAAJ,CAAYgB,SAAZ,CAAsBH,IAAI,CAACE,EAAL,IAAW,EAAjC,EAAqCF,IAAI,CAACI,kBAA1C,CAAV;AACA,SAAO,CAAC,GAAGP,eAAe,CAACV,OAApB,EAA6Ba,IAA7B,EAAmCC,EAAnC,CAAP;AACD,CATD,E,CASI;AACJ;;AAEA,IAAII,SAAJ;;AAEA,IAAI;AACFA,EAAAA,SAAS,GAAGC,MAAM,CAACD,SAAnB;AACD,CAFD,CAEE,OAAOE,CAAP,EAAU,CAAE,C,CAAC;;;AAGf,IAAIF,SAAJ,EAAe;AACbjB,EAAAA,QAAQ,CAACoB,qBAAT,CAA+B,YAAY;AACzC,WAAO,IAAIpB,QAAQ,CAACqB,oBAAb,CAAkCJ,SAAlC,EAA6C,sBAA7C,CAAP;AACD,GAFD;AAGD,C,CAAC;AACF;;;AAGA,IAAIK,QAAQ,GAAGtB,QAAf,C,CAAyB;;AAEzBJ,OAAO,CAACG,OAAR,GAAkBuB,QAAlB;AACAJ,MAAM,CAAClB,QAAP,GAAkBA,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {};\nexports.default = void 0;\n\nvar matrixcs = _interopRequireWildcard(require(\"./matrix\"));\n\nObject.keys(matrixcs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return matrixcs[key];\n    }\n  });\n});\n\nvar _browserRequest = _interopRequireDefault(require(\"browser-request\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\n/*\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nmatrixcs.request(function (opts, fn) {\n  // We manually fix the query string for browser-request because\n  // it doesn't correctly handle cases like ?via=one&via=two. Instead\n  // we mimic `request`'s query string interface to make it all work\n  // as expected.\n  // browser-request will happily take the constructed string as the\n  // query string without trying to modify it further.\n  opts.qs = _qs.default.stringify(opts.qs || {}, opts.qsStringifyOptions);\n  return (0, _browserRequest.default)(opts, fn);\n}); // just *accessing* indexedDB throws an exception in firefox with\n// indexeddb disabled.\n\nlet indexedDB;\n\ntry {\n  indexedDB = global.indexedDB;\n} catch (e) {} // if our browser (appears to) support indexeddb, use an indexeddb crypto store.\n\n\nif (indexedDB) {\n  matrixcs.setCryptoStoreFactory(function () {\n    return new matrixcs.IndexedDBCryptoStore(indexedDB, \"matrix-js-sdk:crypto\");\n  });\n} // We export 3 things to make browserify happy as well as downstream projects.\n// It's awkward, but required.\n\n\nvar _default = matrixcs; // keep export for browserify package deps\n\nexports.default = _default;\nglobal.matrixcs = matrixcs;"]},"metadata":{},"sourceType":"script"}