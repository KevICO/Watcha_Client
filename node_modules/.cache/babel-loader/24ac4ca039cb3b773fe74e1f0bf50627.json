{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidStoreError = InvalidStoreError;\nexports.InvalidCryptoStoreError = InvalidCryptoStoreError; // can't just do InvalidStoreError extends Error\n// because of http://babeljs.io/docs/usage/caveats/#classes\n\nfunction InvalidStoreError(reason, value) {\n  const message = `Store is invalid because ${reason}, ` + `please stop the client, delete all data and start the client again`;\n  const instance = Reflect.construct(Error, [message]);\n  Reflect.setPrototypeOf(instance, Reflect.getPrototypeOf(this));\n  instance.reason = reason;\n  instance.value = value;\n  return instance;\n}\n\nInvalidStoreError.TOGGLED_LAZY_LOADING = \"TOGGLED_LAZY_LOADING\";\nInvalidStoreError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nReflect.setPrototypeOf(InvalidStoreError, Error);\n\nfunction InvalidCryptoStoreError(reason) {\n  const message = `Crypto store is invalid because ${reason}, ` + `please stop the client, delete all data and start the client again`;\n  const instance = Reflect.construct(Error, [message]);\n  Reflect.setPrototypeOf(instance, Reflect.getPrototypeOf(this));\n  instance.reason = reason;\n  instance.name = 'InvalidCryptoStoreError';\n  return instance;\n}\n\nInvalidCryptoStoreError.TOO_NEW = \"TOO_NEW\";\nInvalidCryptoStoreError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nReflect.setPrototypeOf(InvalidCryptoStoreError, Error);","map":{"version":3,"sources":["/home/kimist/Developpement/React/watcha_client/node_modules/matrix-js-sdk/lib/errors.js"],"names":["Object","defineProperty","exports","value","InvalidStoreError","InvalidCryptoStoreError","reason","message","instance","Reflect","construct","Error","setPrototypeOf","getPrototypeOf","TOGGLED_LAZY_LOADING","prototype","create","constructor","enumerable","writable","configurable","name","TOO_NEW"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,uBAAR,GAAkCA,uBAAlC,C,CAEA;AACA;;AACA,SAASD,iBAAT,CAA2BE,MAA3B,EAAmCH,KAAnC,EAA0C;AACxC,QAAMI,OAAO,GAAI,4BAA2BD,MAAO,IAAnC,GAA0C,oEAA1D;AACA,QAAME,QAAQ,GAAGC,OAAO,CAACC,SAAR,CAAkBC,KAAlB,EAAyB,CAACJ,OAAD,CAAzB,CAAjB;AACAE,EAAAA,OAAO,CAACG,cAAR,CAAuBJ,QAAvB,EAAiCC,OAAO,CAACI,cAAR,CAAuB,IAAvB,CAAjC;AACAL,EAAAA,QAAQ,CAACF,MAAT,GAAkBA,MAAlB;AACAE,EAAAA,QAAQ,CAACL,KAAT,GAAiBA,KAAjB;AACA,SAAOK,QAAP;AACD;;AAEDJ,iBAAiB,CAACU,oBAAlB,GAAyC,sBAAzC;AACAV,iBAAiB,CAACW,SAAlB,GAA8Bf,MAAM,CAACgB,MAAP,CAAcL,KAAK,CAACI,SAApB,EAA+B;AAC3DE,EAAAA,WAAW,EAAE;AACXd,IAAAA,KAAK,EAAEQ,KADI;AAEXO,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,QAAQ,EAAE,IAHC;AAIXC,IAAAA,YAAY,EAAE;AAJH;AAD8C,CAA/B,CAA9B;AAQAX,OAAO,CAACG,cAAR,CAAuBR,iBAAvB,EAA0CO,KAA1C;;AAEA,SAASN,uBAAT,CAAiCC,MAAjC,EAAyC;AACvC,QAAMC,OAAO,GAAI,mCAAkCD,MAAO,IAA1C,GAAiD,oEAAjE;AACA,QAAME,QAAQ,GAAGC,OAAO,CAACC,SAAR,CAAkBC,KAAlB,EAAyB,CAACJ,OAAD,CAAzB,CAAjB;AACAE,EAAAA,OAAO,CAACG,cAAR,CAAuBJ,QAAvB,EAAiCC,OAAO,CAACI,cAAR,CAAuB,IAAvB,CAAjC;AACAL,EAAAA,QAAQ,CAACF,MAAT,GAAkBA,MAAlB;AACAE,EAAAA,QAAQ,CAACa,IAAT,GAAgB,yBAAhB;AACA,SAAOb,QAAP;AACD;;AAEDH,uBAAuB,CAACiB,OAAxB,GAAkC,SAAlC;AACAjB,uBAAuB,CAACU,SAAxB,GAAoCf,MAAM,CAACgB,MAAP,CAAcL,KAAK,CAACI,SAApB,EAA+B;AACjEE,EAAAA,WAAW,EAAE;AACXd,IAAAA,KAAK,EAAEQ,KADI;AAEXO,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,QAAQ,EAAE,IAHC;AAIXC,IAAAA,YAAY,EAAE;AAJH;AADoD,CAA/B,CAApC;AAQAX,OAAO,CAACG,cAAR,CAAuBP,uBAAvB,EAAgDM,KAAhD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidStoreError = InvalidStoreError;\nexports.InvalidCryptoStoreError = InvalidCryptoStoreError;\n\n// can't just do InvalidStoreError extends Error\n// because of http://babeljs.io/docs/usage/caveats/#classes\nfunction InvalidStoreError(reason, value) {\n  const message = `Store is invalid because ${reason}, ` + `please stop the client, delete all data and start the client again`;\n  const instance = Reflect.construct(Error, [message]);\n  Reflect.setPrototypeOf(instance, Reflect.getPrototypeOf(this));\n  instance.reason = reason;\n  instance.value = value;\n  return instance;\n}\n\nInvalidStoreError.TOGGLED_LAZY_LOADING = \"TOGGLED_LAZY_LOADING\";\nInvalidStoreError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nReflect.setPrototypeOf(InvalidStoreError, Error);\n\nfunction InvalidCryptoStoreError(reason) {\n  const message = `Crypto store is invalid because ${reason}, ` + `please stop the client, delete all data and start the client again`;\n  const instance = Reflect.construct(Error, [message]);\n  Reflect.setPrototypeOf(instance, Reflect.getPrototypeOf(this));\n  instance.reason = reason;\n  instance.name = 'InvalidCryptoStoreError';\n  return instance;\n}\n\nInvalidCryptoStoreError.TOO_NEW = \"TOO_NEW\";\nInvalidCryptoStoreError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nReflect.setPrototypeOf(InvalidCryptoStoreError, Error);"]},"metadata":{},"sourceType":"script"}