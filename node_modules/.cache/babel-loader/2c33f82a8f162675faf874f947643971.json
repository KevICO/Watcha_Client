{"ast":null,"code":"/* Copyright 2015 Mark Haines\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar escaped = /[\\\\\\\"\\x00-\\x1F]/g;\nvar escapes = {};\n\nfor (var i = 0; i < 0x20; ++i) {\n  escapes[String.fromCharCode(i)] = '\\\\U' + ('0000' + i.toString(16)).slice(-4).toUpperCase();\n}\n\nescapes['\\b'] = '\\\\b';\nescapes['\\t'] = '\\\\t';\nescapes['\\n'] = '\\\\n';\nescapes['\\f'] = '\\\\f';\nescapes['\\r'] = '\\\\r';\nescapes['\\\"'] = '\\\\\\\"';\nescapes['\\\\'] = '\\\\\\\\';\n\nfunction escapeString(value) {\n  escaped.lastIndex = 0;\n  return value.replace(escaped, function (c) {\n    return escapes[c];\n  });\n}\n\nfunction stringify(value) {\n  switch (typeof value) {\n    case 'string':\n      return '\"' + escapeString(value) + '\"';\n\n    case 'number':\n      return isFinite(value) ? value : 'null';\n\n    case 'boolean':\n      return value;\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      if (Array.isArray(value)) {\n        return stringifyArray(value);\n      }\n\n      return stringifyObject(value);\n\n    default:\n      throw new Error('Cannot stringify: ' + typeof value);\n  }\n}\n\nfunction stringifyArray(array) {\n  var sep = '[';\n  var result = '';\n\n  for (var i = 0; i < array.length; ++i) {\n    result += sep;\n    sep = ',';\n    result += stringify(array[i]);\n  }\n\n  if (sep != ',') {\n    return '[]';\n  } else {\n    return result + ']';\n  }\n}\n\nfunction stringifyObject(object) {\n  var sep = '{';\n  var result = '';\n  var keys = Object.keys(object);\n  keys.sort();\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    result += sep + '\"' + escapeString(key) + '\":';\n    sep = ',';\n    result += stringify(object[key]);\n  }\n\n  if (sep != ',') {\n    return '{}';\n  } else {\n    return result + '}';\n  }\n}\n/** */\n\n\nmodule.exports = {\n  stringify: stringify\n};","map":{"version":3,"sources":["/home/kimist/Developpement/React/watcha_client/node_modules/another-json/another-json.js"],"names":["escaped","escapes","i","String","fromCharCode","toString","slice","toUpperCase","escapeString","value","lastIndex","replace","c","stringify","isFinite","Array","isArray","stringifyArray","stringifyObject","Error","array","sep","result","length","object","keys","Object","sort","key","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAeA;;AAEA,IAAIA,OAAO,GAAG,kBAAd;AACA,IAAIC,OAAO,GAAG,EAAd;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAApB,EAA0B,EAAEA,CAA5B,EAA+B;AAC3BD,EAAAA,OAAO,CAACE,MAAM,CAACC,YAAP,CAAoBF,CAApB,CAAD,CAAP,GACI,QAAQ,CAAC,SAASA,CAAC,CAACG,QAAF,CAAW,EAAX,CAAV,EAA0BC,KAA1B,CAAgC,CAAC,CAAjC,EAAoCC,WAApC,EADZ;AAGH;;AACDN,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAhB;AACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAhB;AACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAhB;AACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAhB;AACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAhB;AACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,MAAhB;AACAA,OAAO,CAAC,IAAD,CAAP,GAAgB,MAAhB;;AAEA,SAASO,YAAT,CAAsBC,KAAtB,EAA6B;AACzBT,EAAAA,OAAO,CAACU,SAAR,GAAoB,CAApB;AACA,SAAOD,KAAK,CAACE,OAAN,CAAcX,OAAd,EAAuB,UAASY,CAAT,EAAY;AAAE,WAAOX,OAAO,CAACW,CAAD,CAAd;AAAoB,GAAzD,CAAP;AACH;;AAED,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AACtB,UAAQ,OAAOA,KAAf;AACI,SAAK,QAAL;AACI,aAAO,MAAMD,YAAY,CAACC,KAAD,CAAlB,GAA4B,GAAnC;;AACJ,SAAK,QAAL;AACI,aAAOK,QAAQ,CAACL,KAAD,CAAR,GAAkBA,KAAlB,GAA0B,MAAjC;;AACJ,SAAK,SAAL;AACI,aAAOA,KAAP;;AACJ,SAAK,QAAL;AACI,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,eAAO,MAAP;AACH;;AACD,UAAIM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,EAA0B;AACtB,eAAOQ,cAAc,CAACR,KAAD,CAArB;AACH;;AACD,aAAOS,eAAe,CAACT,KAAD,CAAtB;;AACJ;AACI,YAAM,IAAIU,KAAJ,CAAU,uBAAuB,OAAOV,KAAxC,CAAN;AAhBR;AAkBH;;AAED,SAASQ,cAAT,CAAwBG,KAAxB,EAA+B;AAC3B,MAAIC,GAAG,GAAG,GAAV;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAAK,CAACG,MAA1B,EAAkC,EAAErB,CAApC,EAAuC;AACnCoB,IAAAA,MAAM,IAAID,GAAV;AACAA,IAAAA,GAAG,GAAG,GAAN;AACAC,IAAAA,MAAM,IAAIT,SAAS,CAACO,KAAK,CAAClB,CAAD,CAAN,CAAnB;AACH;;AACD,MAAImB,GAAG,IAAI,GAAX,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAOC,MAAM,GAAG,GAAhB;AACH;AACJ;;AAED,SAASJ,eAAT,CAAyBM,MAAzB,EAAiC;AAC7B,MAAIH,GAAG,GAAG,GAAV;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIG,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,MAAZ,CAAX;AACAC,EAAAA,IAAI,CAACE,IAAL;;AACA,OAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,IAAI,CAACF,MAAzB,EAAiC,EAAErB,CAAnC,EAAsC;AAClC,QAAI0B,GAAG,GAAGH,IAAI,CAACvB,CAAD,CAAd;AACAoB,IAAAA,MAAM,IAAID,GAAG,GAAG,GAAN,GAAYb,YAAY,CAACoB,GAAD,CAAxB,GAAgC,IAA1C;AACAP,IAAAA,GAAG,GAAG,GAAN;AACAC,IAAAA,MAAM,IAAIT,SAAS,CAACW,MAAM,CAACI,GAAD,CAAP,CAAnB;AACH;;AACD,MAAIP,GAAG,IAAI,GAAX,EAAgB;AACZ,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAOC,MAAM,GAAG,GAAhB;AACH;AACJ;AAED;;;AACAO,MAAM,CAACC,OAAP,GAAiB;AAACjB,EAAAA,SAAS,EAAEA;AAAZ,CAAjB","sourcesContent":["/* Copyright 2015 Mark Haines\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nvar escaped = /[\\\\\\\"\\x00-\\x1F]/g;\nvar escapes = {};\nfor (var i = 0; i < 0x20; ++i) {\n    escapes[String.fromCharCode(i)] = (\n        '\\\\U' + ('0000' + i.toString(16)).slice(-4).toUpperCase()\n    );\n}\nescapes['\\b'] = '\\\\b';\nescapes['\\t'] = '\\\\t';\nescapes['\\n'] = '\\\\n';\nescapes['\\f'] = '\\\\f';\nescapes['\\r'] = '\\\\r';\nescapes['\\\"'] = '\\\\\\\"';\nescapes['\\\\'] = '\\\\\\\\';\n\nfunction escapeString(value) {\n    escaped.lastIndex = 0;\n    return value.replace(escaped, function(c) { return escapes[c]; });\n}\n\nfunction stringify(value) {\n    switch (typeof value) {\n        case 'string':\n            return '\"' + escapeString(value) + '\"';\n        case 'number':\n            return isFinite(value) ? value : 'null';\n        case 'boolean':\n            return value;\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return stringifyArray(value);\n            }\n            return stringifyObject(value);\n        default:\n            throw new Error('Cannot stringify: ' + typeof value);\n    }\n}\n\nfunction stringifyArray(array) {\n    var sep = '[';\n    var result = '';\n    for (var i = 0; i < array.length; ++i) {\n        result += sep;\n        sep = ',';\n        result += stringify(array[i]);\n    }\n    if (sep != ',') {\n        return '[]';\n    } else {\n        return result + ']';\n    }\n}\n\nfunction stringifyObject(object) {\n    var sep = '{';\n    var result = '';\n    var keys = Object.keys(object);\n    keys.sort();\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        result += sep + '\"' + escapeString(key) + '\":';\n        sep = ',';\n        result += stringify(object[key]);\n    }\n    if (sep != ',') {\n        return '{}';\n    } else {\n        return result + '}';\n    }\n}\n\n/** */\nmodule.exports = {stringify: stringify};\n"]},"metadata":{},"sourceType":"script"}