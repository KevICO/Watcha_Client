{"ast":null,"code":"var _jsxFileName = \"/home/kimist/Developpement/React/watcha_client/src/App.js\";\nimport React, { Component } from 'react';\nimport watcha_logo from './watcha-logo-nav.png';\nimport './App.css';\nimport sdk from 'matrix-js-sdk';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: false\n    };\n    this.updateIsLoggedHandle = this.updateIsLoggedHandle.bind(this);\n  }\n\n  updateIsLoggedHandle(stateOfConnection) {\n    this.setState({\n      isLogged: stateOfConnection\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-column align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), this.state.isLogged ? React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      onConnection: this.updateIsLoggedHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverUrl: \"https://matrix.org\",\n      userID: \"\",\n      password: \"\"\n    }; //Bind des 'this' sur les fonctions de classe : \n\n    this.updateValueHandle = this.updateValueHandle.bind(this);\n    this.submitHandle = this.submitHandle.bind(this);\n    this.loginReject = this.loginReject.bind(this);\n    this.loginResolve = this.loginResolve.bind(this);\n  }\n\n  updateValueHandle(e) {\n    //Changement de l'état du login lors du renseignement de l'userID et du paswword : \n    const eventID = e.target.id;\n    const eventValue = e.target.value;\n    this.setState(state => ({\n      [eventID]: eventValue\n    }));\n  }\n\n  loginResolve(resolve) {\n    //On synchronise le client avec le serveur de matrix : \n\n    /*client.startClient()\n    client.once('sync', (state, prevState, res) => {console.log(state)})*/\n    //On passe l'objet client à Apps : \n    //On remonte l'état à Apps :\n    this.props.onConnection(true);\n  }\n\n  loginReject(reject) {\n    //On remonte l'état à Apps :\n    this.props.onConnection(false); //On vide les champs UserID et Password :\n\n    this.setState({\n      userID: '',\n      password: ''\n    }); //On affiche un message d'erreur a l'utilisateur : \n  }\n\n  submitHandle(e) {\n    //Création du client et tentative de connexion :\n    e.preventDefault();\n    const client = sdk.createClient(this.state.serverUrl);\n    client.login(\"m.login.password\", {\n      \"user\": this.state.userID,\n      \"password\": this.state.password\n    }).then(resolve => {\n      console / log(resolve.access_token);\n    }, reject => {\n      console.log(\"Erreur\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-column my-2 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-signin justify-content-center\",\n      onSubmit: this.submitHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"User ID : \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"userID\",\n      value: this.state.userID,\n      onChange: this.updateValueHandle,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Password : \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.updateValueHandle,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nfunction HomePage() {\n  /*//Synchronisation avec le serveur Matrix : \n  client.startClient()\n  client.once('sync', function(state, prevState, res) {\n    console.log(state); // state will be 'PREPARED' when the client is ready to use\n  })\n   client.on(\"Room.timeline\", function(event, room, toStartOfTimeline) {\n    console.log(event.event);\n  });*/\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Bienvenu sur la page d'accueil!!\"));\n}\n\nfunction Header() {\n  return React.createElement(\"div\", {\n    className: \"col-4 my-5 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Matrix Client\")));\n}\n\nfunction Footer() {\n  return React.createElement(\"div\", {\n    className: \"col-4 my-5 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: watcha_logo,\n    width: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kimist/Developpement/React/watcha_client/src/App.js"],"names":["React","Component","watcha_logo","sdk","App","constructor","props","state","isLogged","updateIsLoggedHandle","bind","stateOfConnection","setState","render","Login","serverUrl","userID","password","updateValueHandle","submitHandle","loginReject","loginResolve","e","eventID","target","id","eventValue","value","resolve","onConnection","reject","preventDefault","client","createClient","login","then","console","log","access_token","HomePage","Header","Footer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport watcha_logo from './watcha-logo-nav.png'\nimport './App.css';\nimport sdk from 'matrix-js-sdk';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isLogged: false,\n    }\n    this.updateIsLoggedHandle = this.updateIsLoggedHandle.bind(this)\n  }\n\n  updateIsLoggedHandle(stateOfConnection){\n    this.setState(\n      {isLogged: stateOfConnection}\n    )\n  }\n\n  render() {\n    return(\n      <div className=\"d-flex flex-column align-items-center\">\n        <Header />\n        {this.state.isLogged ? <HomePage /> : <Login onConnection={this.updateIsLoggedHandle}/>}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nclass Login extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      serverUrl: \"https://matrix.org\",\n      userID: \"\",\n      password: \"\",\n    }\n    //Bind des 'this' sur les fonctions de classe : \n    this.updateValueHandle = this.updateValueHandle.bind(this)\n    this.submitHandle = this.submitHandle.bind(this)\n    this.loginReject = this.loginReject.bind(this)\n    this.loginResolve = this.loginResolve.bind(this)\n  }\n\n  updateValueHandle(e){\n    //Changement de l'état du login lors du renseignement de l'userID et du paswword : \n    const eventID = e.target.id\n    const eventValue = e.target.value\n    this.setState(state => ({\n      [eventID]: eventValue,\n    }))\n  }\n\n  loginResolve(resolve){\n    //On synchronise le client avec le serveur de matrix : \n    /*client.startClient()\n    client.once('sync', (state, prevState, res) => {console.log(state)})*/\n    //On passe l'objet client à Apps : \n    \n    //On remonte l'état à Apps :\n    this.props.onConnection(true)\n  }\n\n  loginReject(reject){\n    //On remonte l'état à Apps :\n    this.props.onConnection(false)\n    //On vide les champs UserID et Password :\n    this.setState({userID:'', password:''})\n    //On affiche un message d'erreur a l'utilisateur : \n\n  }\n\n  submitHandle(e){\n    //Création du client et tentative de connexion :\n    e.preventDefault()\n    const client = sdk.createClient(this.state.serverUrl)\n    client.login(\"m.login.password\", {\"user\": this.state.userID, \"password\": this.state.password}).then(\n      (resolve) => {console/log(resolve.access_token)},\n      (reject) => {console.log(\"Erreur\")})\n  }\n\n  render() {\n    return(\n        <div className=\"d-flex flex-column my-2 text-center\" >\n          <form className=\"form-signin justify-content-center\" onSubmit={this.submitHandle}>\n            <div className=\"form-group\">\n              <label htmlFor=\"user\">User ID : </label>\n              <input className=\"form-control\" type=\"text\" id=\"userID\" value={this.state.userID} onChange={this.updateValueHandle} required/>\n            </div>\n            <div className=\"form-group mb-5\">\n              <label htmlFor=\"password\">Password : </label>\n              <input className=\"form-control\" type=\"password\" id=\"password\" value={this.state.password} onChange={this.updateValueHandle} required/>\n            </div>\n              <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n    )\n  }\n}\n\nfunction HomePage(){\n  \n  /*//Synchronisation avec le serveur Matrix : \n  client.startClient()\n  client.once('sync', function(state, prevState, res) {\n    console.log(state); // state will be 'PREPARED' when the client is ready to use\n  })\n\n  client.on(\"Room.timeline\", function(event, room, toStartOfTimeline) {\n    console.log(event.event);\n  });*/\n  \n  return(\n    <div>\n      <p>Bienvenu sur la page d'accueil!!</p>\n    </div>\n  )\n}\n\nfunction Header(){\n  return(\n      <div className=\"col-4 my-5 text-center\">\n        <header>\n          <h1 >Matrix Client</h1>\n        </header> \n    </div>\n    \n  )\n}\n\nfunction Footer(){\n  return(\n      <div className=\"col-4 my-5 text-center\">\n        <img src={watcha_logo} width=\"200px\"></img>\n      </div>  \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}