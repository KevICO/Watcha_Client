{"ast":null,"code":"var _jsxFileName = \"/home/kimist/Developpement/React/watcha_client/src/App.js\";\nimport React, { Component } from 'react';\nimport watcha_logo from './watcha-logo-nav.png';\nimport './App.css';\nimport sdk from 'matrix-js-sdk';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      client: null,\n      isLogged: false\n    };\n    this.updateIsLoggedHandle = this.updateIsLoggedHandle.bind(this);\n    this.getClientFromLogin = this.getClientFromLogin.bind(this);\n  }\n\n  updateIsLoggedHandle(stateOfConnection) {\n    this.setState({\n      isLogged: stateOfConnection\n    });\n  }\n\n  getClientFromLogin(loginClient) {\n    this.setState({\n      client: loginClient\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-column align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), this.state.isLogged ? React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      getClient: this.getClientFromLogin,\n      onConnection: this.updateIsLoggedHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverUrl: \"https://matrix.org\",\n      userID: \"\",\n      password: \"\",\n      connectionError: false\n    }; //Bind des 'this' sur les fonctions de classe : \n\n    this.updateValueHandle = this.updateValueHandle.bind(this);\n    this.submitHandle = this.submitHandle.bind(this);\n  }\n\n  updateValueHandle(e) {\n    //Changement de l'état du login lors du renseignement des champs userID et password du formulaire: \n    const eventID = e.target.id;\n    const eventValue = e.target.value;\n    this.setState(state => ({\n      [eventID]: eventValue\n    }));\n  }\n\n  submitHandle(e) {\n    //Création du client et tentative de connexion :\n    const client = sdk.createClient(this.state.serverUrl);\n    client.login(\"m.login.password\", {\n      \"user\": this.state.userID,\n      \"password\": this.state.password\n    }).then( //Login OK :\n    resolve => {\n      e.preventDefault();\n      client.startClient(); //Démarrage du client\n\n      client.once('sync', (state, prevState, res) => {\n        console.log(state);\n      }); //Synchronisation avec le serveur matrix.org\n\n      this.props.getClient(client); //On passe l'objet client a Apps\n\n      this.props.onConnection(true);\n    }, //On remonte l'état a Apps.\n    //Echec du login :\n    reject => {\n      this.props.onConnection(false);\n      this.setState({\n        userID: '',\n        password: '',\n        connectionError: true\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-column my-2 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-signin justify-content-center\",\n      onSubmit: this.submitHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"User ID : \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"userID\",\n      value: this.state.userID,\n      onChange: this.updateValueHandle,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Password : \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.updateValueHandle,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Submit\")), this.connectionError && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"L'identifiant et/ou le mot de passe sont erron\\xE9s.\"));\n  }\n\n}\n\nfunction HomePage() {\n  //A FAIRE\n\n  /*client.on(\"Room.timeline\", function(event, room, toStartOfTimeline) {\n    console.log(event.event);\n  });*/\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Bienvenu sur la page d'accueil!!\"));\n}\n\nfunction Header() {\n  return React.createElement(\"div\", {\n    className: \"col-4 my-5 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Matrix Client\")));\n}\n\nfunction Footer() {\n  return React.createElement(\"div\", {\n    className: \"col-4 my-5 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: watcha_logo,\n    width: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kimist/Developpement/React/watcha_client/src/App.js"],"names":["React","Component","watcha_logo","sdk","App","constructor","props","state","client","isLogged","updateIsLoggedHandle","bind","getClientFromLogin","stateOfConnection","setState","loginClient","render","Login","serverUrl","userID","password","connectionError","updateValueHandle","submitHandle","e","eventID","target","id","eventValue","value","createClient","login","then","resolve","preventDefault","startClient","once","prevState","res","console","log","getClient","onConnection","reject","HomePage","Header","Footer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport watcha_logo from './watcha-logo-nav.png'\nimport './App.css';\nimport sdk from 'matrix-js-sdk';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      client: null,\n      isLogged: false,\n    }\n    this.updateIsLoggedHandle = this.updateIsLoggedHandle.bind(this)\n    this.getClientFromLogin = this.getClientFromLogin.bind(this)\n  }\n\n  updateIsLoggedHandle(stateOfConnection){\n    this.setState(\n      {isLogged: stateOfConnection}\n    )\n  }\n\n  getClientFromLogin(loginClient){\n    this.setState({client: loginClient})\n  }\n\n  render() {\n    return(\n      <div className=\"d-flex flex-column align-items-center\">\n        <Header />\n        {this.state.isLogged ? <HomePage /> : <Login getClient={this.getClientFromLogin} onConnection={this.updateIsLoggedHandle}/>}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nclass Login extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      serverUrl: \"https://matrix.org\",\n      userID: \"\",\n      password: \"\",\n      connectionError: false\n    }\n    //Bind des 'this' sur les fonctions de classe : \n    this.updateValueHandle = this.updateValueHandle.bind(this)\n    this.submitHandle = this.submitHandle.bind(this)\n  }\n\n  updateValueHandle(e){\n    //Changement de l'état du login lors du renseignement des champs userID et password du formulaire: \n    const eventID = e.target.id\n    const eventValue = e.target.value\n    this.setState(state => ({\n      [eventID]: eventValue,\n    }))\n  }\n\n  submitHandle(e){\n    //Création du client et tentative de connexion :\n    const client = sdk.createClient(this.state.serverUrl)\n    client.login(\"m.login.password\", {\"user\": this.state.userID, \"password\": this.state.password}).then(\n      //Login OK :\n      (resolve) => {e.preventDefault()\n                    client.startClient() //Démarrage du client\n                    client.once('sync', (state, prevState, res) => {console.log(state)}) //Synchronisation avec le serveur matrix.org\n                    this.props.getClient(client) //On passe l'objet client a Apps\n                    this.props.onConnection(true)}, //On remonte l'état a Apps.\n      //Echec du login :\n      (reject) => {this.props.onConnection(false)\n                   this.setState({userID:'', \n                                  password:'',\n                                  connectionError: true})})\n  }\n\n  render() {\n     return(\n        <div className=\"d-flex flex-column my-2 text-center\" >\n          <form className=\"form-signin justify-content-center\" onSubmit={this.submitHandle}>\n            <div className=\"form-group\">\n              <label htmlFor=\"user\">User ID : </label>\n              <input className=\"form-control\" type=\"text\" id=\"userID\" value={this.state.userID} onChange={this.updateValueHandle} required/>\n            </div>\n            <div className=\"form-group mb-5\">\n              <label htmlFor=\"password\">Password : </label>\n              <input className=\"form-control\" type=\"password\" id=\"password\" value={this.state.password} onChange={this.updateValueHandle} required/>\n            </div>\n              <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n          </form>\n          {this.connectionError && <p>L'identifiant et/ou le mot de passe sont erronés.</p>}\n        </div>\n    )\n  }\n}\n\nfunction HomePage(){\n  //A FAIRE\n  /*client.on(\"Room.timeline\", function(event, room, toStartOfTimeline) {\n    console.log(event.event);\n  });*/\n  \n  return(\n    <div>\n      <p>Bienvenu sur la page d'accueil!!</p>\n    </div>\n  )\n}\n\nfunction Header(){\n  return(\n      <div className=\"col-4 my-5 text-center\">\n        <header>\n          <h1 >Matrix Client</h1>\n        </header> \n    </div>\n    \n  )\n}\n\nfunction Footer(){\n  return(\n      <div className=\"col-4 my-5 text-center\">\n        <img src={watcha_logo} width=\"200px\"></img>\n      </div>  \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}